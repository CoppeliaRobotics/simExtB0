<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="callbacks.xsl"?>

<plugin name="B0" short-name="B0" author="federico.ferri.it@gmail.com">
    <description>BlueZero plugin</description>
    <command name="nodeCreate">
        <description>Create a new node.</description>
        <categories>
            <category name="node" />
        </categories>
        <params>
            <param name="name" type="string">
                <description>name of the node (will be changed if not unique during initialization)</description>
            </param>
        </params>
        <return>
            <param name="handle" type="string">
                <description>a handle to the new node</description>
            </param>
        </return>
    </command>
    <command name="nodeSetAnnounceTimeout">
        <description>Set the announceNode timeout.</description>
        <categories>
            <category name="node" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>node handle</description>
            </param>
            <param name="timeout" type="int">
                <description>timeout in milliseconds, or -1 for no timeout</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="nodeInit">
        <description>Initialize a node.</description>
        <categories>
            <category name="node" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>node handle</description>
            </param>
        </params>
        <return>
            <param name="name" type="string">
                <description>final name of the node as assigned from resolver node</description>
            </param>
        </return>
    </command>
    <command name="nodeSpinOnce">
        <description>Spin a node.</description>
        <categories>
            <category name="node" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>node handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="nodeCleanup">
        <description>Cleanup a node.</description>
        <categories>
            <category name="node" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>node handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="nodeDestroy">
        <description>Destroy a node.</description>
        <categories>
            <category name="node" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>node handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="socketInit">
        <description>Initialize a socket (only needed for unmanaged sockets).</description>
        <categories>
            <category name="topic" />
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="socketSpinOnce">
        <description>Spin a socket (only needed for unmanaged sockets).</description>
        <categories>
            <category name="topic" />
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="socketPoll">
        <description>Poll a socket (only needed for unmanaged sockets).</description>
        <categories>
            <category name="topic" />
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
        </params>
        <return>
            <param name="result" type="bool">
                <description>poll result</description>
            </param>
        </return>
    </command>
    <command name="socketRead">
        <description>Read from a socket (only needed for unmanaged sockets).</description>
        <categories>
            <category name="topic" />
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
        </params>
        <return>
            <param name="payload" type="string">
                <description>message payload</description>
            </param>
        </return>
    </command>
    <command name="socketWrite">
        <description>Write to a socket (only needed for unmanaged sockets).</description>
        <categories>
            <category name="topic" />
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
            <param name="payload" type="string">
                <description>message payload</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="socketCleanup">
        <description>Cleanup a socket (only needed for unmanaged sockets).</description>
        <categories>
            <category name="topic" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="publisherCreate">
        <description>Create a new publisher.</description>
        <categories>
            <category name="topic" />
        </categories>
        <params>
            <param name="nodeHandle" type="string">
                <description>node handle</description>
            </param>
            <param name="topic" type="string">
                <description>topic name</description>
            </param>
            <param name="managed" type="bool" default="true">
                <description>managed flag</description>
            </param>
            <param name="notifyGraph" type="bool" default="true">
                <description>notify graph flag</description>
            </param>
        </params>
        <return>
            <param name="handle" type="string">
                <description>a handle to the new publisher</description>
            </param>
        </return>
    </command>
    <command name="publisherPublish">
        <description>Publish some data.</description>
        <categories>
            <category name="topic" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>publisher handle</description>
            </param>
            <param name="payload" type="string">
                <description>message payload</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="publisherDestroy">
        <description>Destroy a publisher.</description>
        <categories>
            <category name="topic" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>publisher handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="subscriberCreate">
        <description>Create a new subscriber.</description>
        <categories>
            <category name="topic" />
        </categories>
        <params>
            <param name="nodeHandle" type="string">
                <description>node handle</description>
            </param>
            <param name="topic" type="string">
                <description>topic name</description>
            </param>
            <param name="callback" type="string" default='""'>
                <description>lua calback to call when a message is received</description>
            </param>
            <param name="managed" type="bool" default="true">
                <description>managed flag</description>
            </param>
            <param name="notifyGraph" type="bool" default="true">
                <description>notify graph flag</description>
            </param>
        </params>
        <return>
            <param name="handle" type="string">
                <description>a handle to the new subscriber</description>
            </param>
        </return>
    </command>
    <command name="subscriberDestroy">
        <description>Destroy a subscriber.</description>
        <categories>
            <category name="topic" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>subscriber handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="serviceClientCreate">
        <description>Create a new service client.</description>
        <categories>
            <category name="service" />
        </categories>
        <params>
            <param name="nodeHandle" type="string">
                <description>node handle</description>
            </param>
            <param name="service" type="string">
                <description>service name</description>
            </param>
            <param name="managed" type="bool" default="true">
                <description>managed flag</description>
            </param>
            <param name="notifyGraph" type="bool" default="true">
                <description>notify graph flag</description>
            </param>
        </params>
        <return>
            <param name="handle" type="string">
                <description>a handle to the new service client</description>
            </param>
        </return>
    </command>
    <command name="serviceClientCall">
        <description>Call a service.</description>
        <categories>
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>service client handle</description>
            </param>
            <param name="payload" type="string">
                <description>request payload</description>
            </param>
        </params>
        <return>
            <param name="payload" type="string">
                <description>response payload</description>
            </param>
        </return>
    </command>
    <command name="serviceClientDestroy">
        <description>Destroy a service client.</description>
        <categories>
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>service client handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="serviceServerCreate">
        <description>Create a new service server.</description>
        <categories>
            <category name="service" />
        </categories>
        <params>
            <param name="nodeHandle" type="string">
                <description>node handle</description>
            </param>
            <param name="service" type="string">
                <description>service name</description>
            </param>
            <param name="callback" type="string" default='""'>
                <description>lua calback to call when a request is received</description>
            </param>
            <param name="managed" type="bool" default="true">
                <description>managed flag</description>
            </param>
            <param name="notifyGraph" type="bool" default="true">
                <description>notify graph flag</description>
            </param>
        </params>
        <return>
            <param name="handle" type="string">
                <description>a handle to the new service server</description>
            </param>
        </return>
    </command>
    <command name="serviceServerDestroy">
        <description>Destroy a service server.</description>
        <categories>
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>service server handle</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="socketSetCompression">
        <description>Set compression for the specified socket.</description>
        <categories>
            <category name="topic" />
            <category name="service" />
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
            <param name="compressionAlgorithm" type="string">
                <description>compression algorithm to use. an empty string will disable compression.</description>
            </param>
            <param name="compressionLevel" type="int" default="-1">
                <description>compression level (-1 will use default level)</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <command name="socketSetOption">
        <description>Set a low-level socket option. Available options:
            <ul>
                <li>lingerPeriod</li>
                <li>backlog</li>
                <li>readTimeout</li>
                <li>writeTimeout</li>
                <li>immediate</li>
                <li>conflate</li>
                <li>readHWM</li>
                <li>writeHWM</li>
            </ul>
        </description>
        <categories>
        </categories>
        <params>
            <param name="handle" type="string">
                <description>socket handle</description>
            </param>
            <param name="option" type="string">
                <description>option key.</description>
            </param>
            <param name="value" type="int">
                <description>option value.</description>
            </param>
        </params>
        <return>
        </return>
    </command>
    <script-function name="topicCallback">
        <description>Callback for a subscriber.</description>
        <params>
            <param name="payload" type="string">
                <description>raw payload</description>
            </param>
        </params>
        <return>
        </return>
    </script-function>
    <script-function name="serviceCallback">
        <description>Callback for a service server.</description>
        <params>
            <param name="payload" type="string">
                <description>raw request payload</description>
            </param>
        </params>
        <return>
            <param name="payload" type="string">
                <description>raw response payload</description>
            </param>
        </return>
    </script-function>
    <command name="getHandles">
        <description>Return a list of active handles</description>
        <categories>
        </categories>
        <params>
        </params>
        <return>
            <param name="handles" type="table" item-type="string">
                <description>list of handles.</description>
            </param>
        </return>
    </command>
</plugin>
